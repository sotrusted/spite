# Generated by Django 4.2.19 on 2025-04-08 21:58

from django.db import migrations
from blog.models import SecureIPStorage


def encrypt_existing_ips(apps, schema_editor):
    # Get all models with IP addresses
    Post = apps.get_model('blog', 'Post')
    Comment = apps.get_model('blog', 'Comment')
    SearchQueryLog = apps.get_model('blog', 'SearchQueryLog')
    List = apps.get_model('blog', 'List')
    ChatMessage = apps.get_model('blog', 'ChatMessage')
    
    storage = SecureIPStorage()
    
    # Encrypt Post IPs
    for post in Post.objects.all():
        if post.ip_address and not post.encrypted_ip:
            post.encrypted_ip = storage.encrypt_ip(post.ip_address)
            post.save(update_fields=['encrypted_ip'])
    

class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0028_testpost'),
    ]

    operations = [
        migrations.RunPython(encrypt_existing_ips),
    ]
