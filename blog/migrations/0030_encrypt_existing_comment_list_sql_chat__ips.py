# Generated by Django 4.2.19 on 2025-04-08 22:01

from django.db import migrations
from blog.models import SecureIPStorage

def encrypt_existing_ips(apps, schema_editor):
    # Get all models with IP addresses
    Comment = apps.get_model('blog', 'Comment')
    SearchQueryLog = apps.get_model('blog', 'SearchQueryLog')
    List = apps.get_model('blog', 'List')
    ChatMessage = apps.get_model('blog', 'ChatMessage')
    
    storage = SecureIPStorage()
    
    # Do the same for other models
    for comment in Comment.objects.all():
        if comment.ip_address and not comment.encrypted_ip:
            comment.encrypted_ip = storage.encrypt_ip(comment.ip_address)
            comment.save(update_fields=['encrypted_ip'])
    
    for sql in SearchQueryLog.objects.all():
        if sql.ip_address and not sql.encrypted_ip:
            sql.encrypted_ip = storage.encrypt_ip(sql.ip_address)
            sql.save(update_fields=['encrypted_ip'])
    
    for sql in List.objects.all():
        if sql.ip_address and not sql.encrypted_ip:
            sql.encrypted_ip = storage.encrypt_ip(sql.ip_address)
            sql.save(update_fields=['encrypted_ip'])
    for sql in ChatMessage.objects.all():
        if sql.ip_address and not sql.encrypted_ip:
            sql.encrypted_ip = storage.encrypt_ip(sql.ip_address)
            sql.save(update_fields=['encrypted_ip'])
    # Continue with other models...



class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0029_encrypt_existing_ips'),
    ]

    operations = [
    ]
