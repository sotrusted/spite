# Generated by Django 4.2.19 on 2025-09-15 20:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('blog', '0040_alter_comment_restored_alter_comment_reviewed_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentiment_analysis_enabled', models.BooleanField(default=True)),
                ('semantic_analysis_enabled', models.BooleanField(default=True)),
                ('max_items_per_batch', models.PositiveIntegerField(default=20, help_text='Maximum number of items to analyze in one batch (kept small for performance)')),
                ('analysis_interval_minutes', models.PositiveIntegerField(default=1440, help_text='Minutes between analysis runs')),
                ('min_content_length', models.PositiveIntegerField(default=10, help_text='Minimum content length to analyze')),
                ('exclude_spam', models.BooleanField(default=True, help_text='Skip analysis of content marked as spam')),
                ('max_content_age_days', models.PositiveIntegerField(default=7, help_text='Only analyze content newer than this many days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analysis Settings',
                'verbose_name_plural': 'Analysis Settings',
            },
        ),
        migrations.CreateModel(
            name='SemanticAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('hour', 'Hourly'), ('day', 'Daily'), ('week', 'Weekly')], db_index=True, max_length=10)),
                ('period_start', models.DateTimeField(db_index=True)),
                ('topic_distribution', models.JSONField(default=dict)),
                ('keyword_frequency', models.JSONField(default=dict)),
                ('total_posts', models.PositiveIntegerField(default=0)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('avg_post_length', models.FloatField(default=0.0)),
                ('avg_comment_length', models.FloatField(default=0.0)),
                ('avg_sentiment', models.FloatField(default=0.0)),
                ('sentiment_variance', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['period_type', '-period_start'], name='blog_semant_period__c380e7_idx'), models.Index(fields=['-created_at'], name='blog_semant_created_5a8c0b_idx')],
                'unique_together': {('period_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='SentimentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('sentiment_score', models.FloatField(help_text='Overall sentiment score (-1 to 1)')),
                ('confidence', models.FloatField(help_text='Confidence of the sentiment analysis (0 to 1)')),
                ('emotion_joy', models.FloatField(default=0.0)),
                ('emotion_anger', models.FloatField(default=0.0)),
                ('emotion_fear', models.FloatField(default=0.0)),
                ('emotion_sadness', models.FloatField(default=0.0)),
                ('analyzed_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('analysis_version', models.CharField(default='1.0', max_length=10)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='blog_sentim_content_f42063_idx'), models.Index(fields=['-analyzed_at'], name='blog_sentim_analyze_4cd271_idx'), models.Index(fields=['sentiment_score', '-analyzed_at'], name='blog_sentim_sentime_93f783_idx')],
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
