import os
import environ
import time

# Initialize environment variables
env = environ.Env(
    DEBUG=(bool, False)  # Set the default value for DEBUG as False
)
from celery.schedules import crontab
import mimetypes

mimetypes.add_type("application/javascript", ".js", True)

DEBUG_TOOLBAR_CONFIG = {
    "INTERCEPT_REDIRECTS": False,
}
"""
Django settings for spite project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import sys
from pathlib import Path
import json
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Reading .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False



ALLOWED_HOSTS = ['127.0.0.1', '192.3.30.202', '69.48.163.194', 'spite.fr', 'localhost', 'testserver', '192-3-30-202-host.colocrossing.com']


# Application definition



INSTALLED_APPS = [
    'daphne', 
    'axes',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'blog',
    'spite',
    'crispy_forms',
    'formtools',
    'easy_thumbnails',
    'filer',
    'crispy_bootstrap4',
    'channels',
    'corsheaders',
    'graphene_django',
    'pwa',
    'meta',
    'compressor',
]

CORS_ALLOWED_ORIGINS = [
    'https://spite.fr',
    'https://www.spite.fr',
    'https://localhost',
    'https://127.0.0.1',
    'https://192.3.30.202',
    'https://69.48.163.194',
]

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'OPTIONS',
]

CORS_ALLOW_CREDENTIALS = True

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django_cloudflare.CloudflareMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'axes.middleware.AxesMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middleware.active_session_middleware.ActiveSessionMiddleware',
    'middleware.page_view_middleware.PageViewMiddleware',
    'middleware.loading_screen_middleware.LoadingScreenMiddleware',
    'blog.middleware.BlockIPMiddleware',
]

ROOT_URLCONF = 'spite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'spite.context_processors.load_posts',
            ],
        },
    },
]

WSGI_APPLICATION = 'spite.wsgi.application'
ASGI_APPLICATION = "spite.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST', default='localhost'),
        'PORT': env('DB_PORT', default='5432'),
        'CONN_MAX_AGE': 60,  # Keep connections alive for 60 seconds
        'OPTIONS': {
            'keepalives': 1,
            'keepalives_idle': 30,
            'keepalives_interval': 10,
            'keepalives_count': 5
        }
    }
}

'''

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

'''


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },

]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),
                    ]
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
STATIC_URL = 'https://spite.fr/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

# Use a timestamp for dynamic versioning
STATIC_VERSION = str(int(time.time()))

COMPRESS_ENABLED = True
COMPRESS_URL = STATIC_URL
COMPRESS_OFFLINE = True  # Enable offline compression for production
COMPRESS_ROOT = STATIC_ROOT

COMPRESS_OFFLINE_CONTEXT = {
    'STATIC_URL': 'https://spite.fr/static/',  # Match your STATIC_URL
    'MEDIA_URL': 'https://spite.fr/media/',    # Match your MEDIA_URL
    'STATIC_VERSION': STATIC_VERSION,
}


MEDIA_URL = 'https://spite.fr/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_TEMPLATE_PACK = 'bootstrap4'

SECURE_SSL_REDIRECT = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
CSRF_FAILURE_VIEW = 'blog.views.custom_csrf_failure'

SECURE_HSTS_SECONDS = 3600
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Django's default auth
    'axes.backends.AxesStandaloneBackend',  # Axes for login security
]
AXES_FAILURE_LIMIT = 5  # Number of attempts before blocking
AXES_COOLOFF_TIME = 1  # Time in hours before reset
AXES_LOCK_OUT_AT_FAILURE = True
AXES_CLIENT_IP_METHOD = "axes.utils.get_client_ip"
AXES_ALLOWED_IPS = ["67.244.64.72"]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/django_debug.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'stream': sys.stdout,
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'javascript_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/javascript.log',
            'formatter': 'verbose',
        },
        'auth_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/auth.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file', 'console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'spite': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG', 
            'propogate': True,
        },
        'django.security.csrf': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
        'javascript': {
            'handlers': ['javascript_file'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.contrib.auth': {
            'handlers': ['auth_file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }, 
}

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1209600  # 2 weeks (default)

# Maximum size for file uploads (in bytes)
# DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50 MB

# Maximum size for request data (in bytes)


# FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50 MB

TIME_ZONE = 'America/New_York'  # EST time zone
USE_TZ = True  # Enable timezone support


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Example using Redis as broker
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
BROKER_CONNECTION_RETRY_ON_STARTUP = True  # Add this to fix the warning

CELERY_BEAT_SCHEDULE = {
    'cache-posts': {
        'task': 'spite.tasks.cache_posts_data',
        'schedule': 60.0,  # Run every minute
    },
    'persist-pageviews': {
        'task': 'spite.tasks.persist_pageview_count',
        'schedule': 60.0,
    },
}

CSRF_TRUSTED_ORIGINS = ['https://spite.fr', 'https://www.spite.fr']


PUSHOVER_USER_KEY = 'uy1xqcve4jrr2risjt42m717bw228u'
PUSHOVER_API_TOKEN = 'apuwdk74tzqpfv35b1sc76vgs1z2g8'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}


PWA_APP_NAME = 'SPITE MAGAZINE'
PWA_APP_DESCRIPTION = 'Anyone can write for spite'
PWA_APP_THEME_COLOR = '#000000'
PWA_APP_BACKGROUND_COLOR = '#faebd7'
PWA_APP_SCOPE = '/'
PWA_APP_START_URL = '/'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_ICONS = [
    {
        'src': '/static/images/icon-192x192.png',
        'sizes': '192x192'
    },
    {
        'src': '/static/images/icon-512x512.png',
        'sizes': '512x512'
    }
]
PWA_APP_OFFLINE_PAGE = '/offline/'  # URL for offline fallback page
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'static', 'sw.js')

OPENAI_SECRET_KEY = env('OPENAI_SECRET_KEY')
OPENAI_ORGANIZATION_KEY = env('OPENAI_ORGANIZATION_KEY')
OPENAI_PROJECT_ID = env('OPENAI_PROJECT_ID')

AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = env('AWS_S3_REGION_NAME')

IP_ENCRYPTION_KEY = env('IP_ENCRYPTION_KEY')

if DEBUG:
    INTERNAL_IPS = ['127.0.0.1', '192.3.30.202', '69.117.220.13']
    MIDDLEWARE = [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
        'silk.middleware.SilkyMiddleware',
        ] + MIDDLEWARE

    INSTALLED_APPS += [
        'debug_toolbar',
        'silk',
        ]
    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
    ]

    DEBUG_TOOLBAR_CONFIG = {
        'INTERCEPT_REDIRECTS': False,
    }

    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK" : lambda request: True,
    }


    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

ALLOWED_HOSTS = ['spite.fr', 'www.spite.fr', 'localhost', '127.0.0.1', '192.3.30.202', '69.48.163.194']

